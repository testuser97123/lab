apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: "bastion"
  namespace: "namespace-user{{ item }}"
  finalizers:
    - kubevirt.io/virtualMachineControllerFinalize
  labels:
    app: "bastion"
spec:
  dataVolumeTemplates:
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        creationTimestamp: null
        name: "bastion"
      spec:
        sourceRef:
          kind: DataSource
          name: fedora
          namespace: openshift-virtualization-os-images
        storage:
          resources:
            requests:
              storage: 30Gi
  running: true
  template:
    metadata:
      annotations:
        vm.kubevirt.io/flavor: small
        vm.kubevirt.io/os: fedora
        vm.kubevirt.io/workload: server
      creationTimestamp: null
      labels:
        kubevirt.io/domain: "bastion"
        kubevirt.io/size: small
        network.kubevirt.io/headlessService: headless
    spec:
      architecture: amd64
      domain:
        cpu:
          cores: 1
          sockets: 2
          threads: 1
        devices:
          disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
          interfaces:
            - masquerade: {}
              model: virtio
              name: default
          rng: {}
        features:
          acpi: {}
          smm:
            enabled: true
        firmware:
          bootloader:
            efi: {}
        machine:
          type: pc-q35-rhel9.4.0
        memory:
          guest: 4Gi
        resources: {}
      networks:
        - name: default
          pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
        - dataVolume:
            name: "bastion"
          name: rootdisk
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              user: user{{ item }}
              password: redhat1
              chpasswd: { expire: False }
              packages:
                - git
                - python3-pip
                - ansible-core
                - vim
              runcmd:              
                - curl -L -o /tmp/openshift-client-linux.tar.gz "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.16.19/openshift-client-linux.tar.gz"
                - tar -xzf /tmp/openshift-client-linux.tar.gz  -C /usr/local/bin
                - rm /tmp/openshift-client-linux.tar.gz
                - git clone https://github.com/opentraining-labs-customizations/rh1-lab17-ocpvirt.git /opt/rh1-lab17-ocpvirt/
                - sudo cp /opt/rh1-lab17-ocpvirt/lab /usr/local/bin
                - ansible-galaxy collection install -r /opt/rh1-lab17-ocpvirt/requirements.yml -p /usr/share/ansible/collections/
                - pip install kubernetes passlib
                - echo 'export EDITOR=vim' >> "/home/user{{ item }}/.bashrc"
          name: cloudinitdisk